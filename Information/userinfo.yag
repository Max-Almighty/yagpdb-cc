{{/*
    Shows information about the current/given user. Syntax is -userinfo [Optional User:Mention/ID]
    
    Trigger Type: Regex
    Trigger: (?i)\A(-|<@!?204255221017214977>\s*)((user|member)(-?info)|ui)(\s+|\z)
    
    Made by Max ãƒ„#8224
*/}}

{{$error:= false}} {{$user:= .User}} {{$member:= .Member}} {{$strippedmsg:= .StrippedMsg}} {{$nick:= ":x: None Set!"}} {{$notable:= "None"}} {{$roles := ""}} {{$col := 16777215}}{{$p := 0}}

{{if gt (len .Args) 1}}
    {{if reFind `(?i)(<@!?\d{17,19}>|\d{17.19})` (index .Args 1)}}
        {{if (getMember (index .Args 1))}}
            {{$member = getMember (index .Args 1)}} {{$user = $member.User}}
        {{else}}
            {{$error = "Invalid User provided!"}}
        {{end}}
    {{end}}
{{end}}
    
{{$r := $member.Roles}}
{{range .Guild.Roles}}
    {{- if and (in $r .ID) (.Color) (lt $p .Position) -}}   
        {{- $p = .Position}}{{$col = .Color -}}
    {{- end}}
{{end}}

{{if .Member.Nick}}
    {{$nick = .Member.Nick}}
{{end}}
{{$status:= (index (exec "whois" $user.ID).Fields 6).Value}}
{{if reFind "Has no active status, is invisible/offline or is not in the bot's cache." $status}}
    {{$status = ":x: User has no active status, or is invisible/offline"}}
{{else if reFind `\ACustom Status:` $status}}
    {{$status = (reReplace `\ACustom Status:` $status "")}}
{{end}}
{{$perms:= (reReplace `.*\n` (execAdmin "viewperms" $user.ID) "")}}

{{$memberRoles := cslice}}
{{range .Guild.Roles}}
    {{- if in $.Member.Roles .ID -}}
        {{- $memberRoles = $memberRoles.Append .ID -}}
    {{- end}}
{{end}}
{{range $k, $v := $memberRoles}}
	{{- if eq $k 0}} 
        {{- $roles = printf "- <@&%d>" .}}
	{{- else }} 
        {{- $roles = printf "%s\n- <@&%d>" $roles .}} 
    {{- end -}}
{{end}}

{{$createdAt:= div $user.ID 4194304 | add 1420070400000 | mult 1000000 | toDuration | (newDate 1970 1 1 0 0 0).Add}} 
{{$fields:= (cslice

    (sdict "name" "User ID" "value" (str $user.ID) "inline" true)
    (sdict "name" "Bot" "value" ($user.Bot|json|str|title) "inline" true)
    (sdict "name" "\u200B" "value" "\u200B" "inline" true)
    (sdict "name" "Nickname" "value" $nick "inline" true)
    (sdict "name" "Status" "value" $status "inline" true)
    (sdict "name" "\u200B" "value" "\u200B" "inline" true)
    (sdict "name" "Joined Server At" "value" (print "ðŸ“† <t:" (str (toInt ($member.JoinedAt.Parse).Unix)) ":F>\nðŸ•› <t:" (str (toInt ($member.JoinedAt.Parse).Unix)) ":R>"))
    (sdict "name" "Account Created" "value" (print "ðŸ“† <t:" (str $createdAt.Unix) ":F>\nðŸ•› <t:" (str $createdAt.Unix) ":R>"))
    )
}}
{{$embed:= sdict
    "title" "User Information"
    "description" (print "Given below is the information on the user " $user.Mention ". Use the optional `-p` and `-r` flags to view the user's permissions and/or roles!")
    "fields" $fields
    "color" $col
    "thumbnail" (sdict "url" ($user.AvatarURL "1024"))
    "footer" (sdict "text" (print "Triggered by " .User.String))
    "timestamp" currentTime
}}

{{if eq $user.ID .Guild.OwnerID}}
    {{$notable = "Server Owner"}}
{{else if (in (split (index (split (exec "viewperms" $user.ID) "\n") 2) ", ") "Administrator")}}
    {{$notable = "Server Administrator"}}
{{else if and (in (split (index (split (exec "viewperms" $user.ID) "\n") 2) ", ") "ManageMessages") (in (split (index (split (exec "viewperms" $user.ID) "\n") 2) ", ") "BanMembers")}}
    {{$notable = "Server staff"}}
{{end}}

{{if $strippedmsg}}
    {{if reFind `(?i)-(p(?:erm(?:s|ission|issions)?)?|r(?:ole(?:s)?)?)\b` $strippedmsg}}
        {{if and (reFind `(?i)-(p(?:erm(?:s|ission|issions)?)?)\b` $strippedmsg) (reFind `(?i)-(r(?:ole(?:s)?)?)\b` $strippedmsg)}}
            {{$fields = (cslice
                (sdict "name" (print "Roles (" (len $member.Roles) ")") "value" (or $roles "User has no roles!"))
                (sdict "name" "Permissions" "value" $perms)
                (sdict "name" "Notable Features" "value" $notable)
                )
            }}
            {{$embed.Set "description" (print "Given below are the roles and permissions for the user " $user.Mention)}}
        {{else if reFind `(?i)-(p(?:erm(?:s|ission|issions)?)?)\b` $strippedmsg}}
            {{$fields = (cslice
                (sdict "name" "Permissions" "value" $perms)
                (sdict "name" "Notable Features" "value" $notable)
            )}}
            {{$embed.Set "description" (print "Given below are the permissions for the user " $user.Mention)}}
        {{else if reFind `(?i)-(r(?:ole(?:s)?)?)\b` $strippedmsg}}
            {{$fields = (cslice
                (sdict "name" (print "Roles (" (len $member.Roles) ")") "value" (or $roles "User has no roles!"))
            )}}
            {{$embed.Set "description" (print "Given below are the roles that " $user.Mention " has!")}}
        {{end}}
    {{$embed.Set "fields" $fields}}
    {{else}}
        {{$error = "Invalid arguments provided!"}}
    {{end}}
{{end}}

{{if not $error}}
    {{sendMessage nil (cembed $embed)}}
{{else}}
    {{sendMessage nil (cembed "title" "Error!" "description" $error)}}
{{end}}
